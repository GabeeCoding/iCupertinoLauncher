const[$,jQuery]=[window.$,window.jQuery];import cupertinoElements from"./cupertinoElements";const myDock=$("body #dock");window.myDock=myDock;var allappsarchive=[];window.allappsarchive=allappsarchive;const exampleDB=function(){return{placement:{dock:[],pages:[[]]},order:[],customGrid:!1,wallpaper:"undefined",nestedDock:!1}},getCurrentDBName=function(){var urlParams=new URLSearchParams(window.location.search),d_name="";return d_name=urlParams.has("emudata")?"mDB_"+urlParams.get("emudata"):"defaultDB"};console.log(getCurrentDBName());const getGrid=function(db){var ava=JSON.parse(JSON.stringify(db)),defaultGrid=document.body.TABLET_VIEW?[5,6]:[4,6];if(!ava.customGrid){ava.temp={grid:[0,0]};try{String([Number(cacdb.customGrid[0]),Number(cacdb.customGrid[1])])!=String([0,0])?ava.temp.grid=[Number(cacdb.customGrid[0]),Number(cacdb.customGrid[1])]:ava.temp.grid=defaultGrid}catch(error){ava.temp.grid=defaultGrid}}return springBoard.setDB(ava),ava},resetDB=function(){return getGrid({placement:{dock:[],pages:[[]]},order:[],customGrid:!1,wallpaper:"undefined",nestedDock:!1})},replaceApps=function(resp){var mygridsize=springBoard.getDB().temp.grid[0]*springBoard.getDB().temp.grid[1],response=resp,allapps=[].concat(springBoard.getDB().placement.dock,springBoard.getDB().placement.pages);function processArrays(array1,array2){const deletedFromArray1=array1.filter(str=>!array2.includes(str));return array1=array1.filter(str=>array2.includes(str)),array2=array2.filter(str=>!array1.includes(str)),array1.concat(array2),[array1,array2]}function arrayAddToEnd(gridsize,arrayofarrays,array){let lists=arrayofarrays,add;function addToNestedArray(arr,value){0!==arr.length&&arr[arr.length-1].length!==gridsize||arr.push([]),arr[arr.length-1].push(value)}return array.forEach(value=>{addToNestedArray(lists,value)}),lists}var db=springBoard.getDB();const array3=processArrays(allapps,resp.apps.map(obj=>obj.packageName)),newapplist=arrayAddToEnd(mygridsize,array3[0],array3[1]);db.placement.pages="string"==typeof newapplist[0]?[].push(newapplist):newapplist,springBoard.setDB(db)},springBoard={findLabelFromPackageName:function(packageName){var apps=window.allappsarchive;for(let i=0;i<window.allappsarchive.length;i++)if(window.allappsarchive[i].packageName==packageName)return window.allappsarchive[i].label;return null},reloadApps:function(callback){fetch(Bridge.getAppsURL()).then(resp=>resp.json()).then(resp=>{replaceApps(resp),window.allappsarchive=resp.apps,springBoard.reloadPages(),callback&&"function"==typeof callback&&callback()})},setDB:function(json){try{var deaa=JSON.parse(JSON.stringify(json));delete deaa.temp,localStorage.setItem(getCurrentDBName(),JSON.stringify(deaa))}catch(error){return!1}},getDB:function(){try{const cacdb=JSON.parse(localStorage[getCurrentDBName()]);return delete cacdb.temp,getGrid(cacdb)}catch(error){console.info("DATABASE REBUILD");var dat=resetDB();return springBoard.setDB(dat),resetDB()}},relocateIcons:function(){var iconsize=Number($("body").css("--icon-size").slice(0,-2));!function relocateDockIcons(params){$(":root").css({"--screen-width":document.body.clientWidth+"px","--screen-height":document.body.clientHeight+"px","--screen-width-p":document.body.clientWidth/devicePixelRatio+"px","--screen-height-p":document.body.clientHeight/devicePixelRatio+"px"});var iconcount=Number(myDock.children("div.C_ELEMENT.APPICON").length),restedDock=$("body").css("--screenradius").slice(0,-2)<=18;if(restedDock?$("body").addClass("nestedDock"):$("body").removeClass("nestedDock"),document.body.TABLET_VIEW){var width=(iconcount-1)*iconsize+17*(iconcount-1),left=myDock.css("width").slice(0,-2)/2-(width+iconsize)/2;if(restedDock){var width=(5*(iconcount*iconsize+17*(iconcount+1))+document.body.clientWidth)/6,left=myDock.css("width").slice(0,-2)/2-(width+iconsize)/2;myDock.children().each((function(index,element){const tr=index/(iconcount-1);$(element).css({left:`${left+--width*tr}px`,top:"19px"})}))}else width+34+iconsize>myDock.css("min-width").slice(0,-2)?($("#dock").css("width",iconcount*iconsize+17*(iconcount+1)+"px"),myDock.children().each((function(index,element){const tr=index/(iconcount-1);$(element).css({left:`${(index-0)*iconsize+17*(index+1)}px`,top:"17px"})}))):myDock.children().each((function(index,element){const tr=index/(iconcount-1);$(element).css({left:`${left+--width*tr}px`,top:"17px"})}))}else{iconcount>4&&(myDock.children().slice("4").remove(),iconcount=Number(myDock.children("div.C_ELEMENT.APPICON").length),iconsize=Number($("body").css("--icon-size").slice(0,-2))),width=myDock.css("width").slice(0,-2)-38-iconsize,left=19;var pseudowidth=3*iconsize+38+29,pseudoleft=myDock.css("width").slice(0,-2)/2-(pseudowidth+iconsize)/2;if(iconcount<=3)var width=(iconcount-1)*iconsize+29*(iconcount-2)+19,left=myDock.css("width").slice(0,-2)/2-(width+iconsize)/2;else if(4==iconcount&&pseudoleft>100)var width=(iconcount-1)*iconsize+116*(iconcount-2)+19,left=myDock.css("width").slice(0,-2)/2-(width+iconsize)/2;myDock.children().each((function(index,element){const tr=index/(iconcount-1);$(element).css({left:`${left+--width*tr}px`,top:"19px"})}))}}();const config=springBoard.getDB(),grid=config.temp.grid;var[column,row]=[grid[0],grid[1]],landscape=document.body.clientWidth>document.body.clientHeight;landscape&&([column,row]=[grid[1],grid[0]]);const rect=[100,100,0,$("#dock").height()+2*$("#dock").css("bottom").slice(0,-2)];document.body.TABLET_VIEW?(landscape&&(rect[0]=document.body.clientWidth/7.8666666667,rect[1]=document.body.clientHeight/15.7692307692,rect[2]=document.body.clientWidth/7.8666666667,rect[3]=document.body.clientHeight/10),rect[0]=document.body.clientWidth/7.3214285714,rect[1]=document.body.clientHeight/17,rect[2]=document.body.clientWidth/7.3214285714,rect[3]=document.body.clientHeight/10):(rect[0]=32,rect[1]=71,rect[2]=32,rect[3]=190);const convrect=[rect[0],rect[1],document.body.clientWidth-rect[2]-rect[0],document.body.clientHeight-rect[3]-rect[1]];function relocatePageIcons(eq){$("#pages").children("div.C_ELEMENT.PAGEGRID").eq(eq).children("div.C_ELEMENT.APPICON").each((function(index,element){const[lx,ly]=[index%column,Math.floor(index/column)],[cx,cy]=[lx/(column-1),ly/(row-1)];$(element).css({left:`${convrect[0]+cx*(convrect[2]-iconsize)}px`,top:`${convrect[1]+cy*(convrect[3]-iconsize-20)}px`})}))}console.log(document.body.clientHeight,convrect[3]);for(let i=0;i<$("#pages").children("div.C_ELEMENT.PAGEGRID").length;i++)relocatePageIcons(i)},reloadPages:function(){const config=springBoard.getDB(),desiredChildrenCount=config.placement.pages.length,childrenCount=$("#pages").children(".PAGEGRID").length;if(childrenCount>desiredChildrenCount)$("#pages").children(".PAGEGRID:gt("+(desiredChildrenCount-1)+")").remove();else if(childrenCount<desiredChildrenCount){const childrenToAdd=desiredChildrenCount-childrenCount;for(let i=0;i<childrenToAdd;i++){var page=cupertinoElements.appGrid(config.temp.grid[0],config.temp.grid[1]);$("#pages").append(page)}}$("#pages").children("div.C_ELEMENT.PAGEGRID").each((index,element)=>{config.placement.pages[index].forEach((elemente,indexe)=>{config.placement.pages[index].length-1>=indexe&&$(element).append(new cupertinoElements.appIcon(Bridge.getDefaultAppIconURL(config.placement.pages[index][indexe]),springBoard.findLabelFromPackageName(config.placement.pages[index][indexe]),config.placement.pages[index][indexe]))})})},exitInfoView:function(){const icon=$("div.C_ELEMENT.APPICON.hold"),inner=icon.children("img.ICON"),del=$("div.C_ELEMENT.APPINFOTRANSLUCENTLAYER");$("div.C_ELEMENT.APPINFOTRANSLUCENTLAYER").css("animation","aitl_exit 0.2s ease-in-out forwards"),$("body").removeClass("appinfoview"),inner.css("animation","iconinfoexit 0.2s forwards").removeClass("info"),icon.removeClass("hold"),icon.css("z-index","11"),setTimeout(()=>{del.remove(),icon.css("z-index",""),console.log(icon),console.log("BOOOOK"),inner.css("animation",""),icon.css("visibility",""),setTimeout(()=>{$("body > div.C_ELEMENT.APPICON").remove()},0)},200)}};export default springBoard;$.ajax({url:springBoard.getDB().wallpaper,type:"HEAD",error:function(){console.log("NO WALLPAPER. DEFAULT SELECTED")},success:function(){$("#system_wallpaper").attr("src",springBoard.getDB().wallpaper)}});